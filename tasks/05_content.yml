---
- name: Clone Exercise to {{ learners_exercise_build_path }}
  become: true
  become_user: "{{ learners_user }}"
  ansible.builtin.git:
    repo: "{{ learners_exercise_repository }}"
    dest: "{{ learners_exercise_build_path }}"
    version: "{{ learners_exercise_branch | default('master') }}"
    accept_hostkey: true
    single_branch: true
    recursive: false
    force: true
    depth: 1
  environment:
    GIT_TERMINAL_PROMPT: "0"

- name: Remove themes folder
  become: true
  ansible.builtin.file:
    path: "{{ learners_exercise_build_path }}/themes/learners/"
    state: absent

- name: Ensure themes folder exists
  become: true
  ansible.builtin.file:
    path: "{{ learners_exercise_build_path }}/themes/learners/"
    owner: "{{ learners_user }}"
    group: "{{ learners_user }}"
    mode: "0755"
    state: directory

- name: Clone Theme
  become: true
  become_user: "{{ learners_user }}"
  ansible.builtin.git:
    repo: "{{ learners_theme_repository }}"
    dest: "{{ learners_exercise_build_path }}/themes/learners/"
    version: "{{ learners_theme_branch | default('master') }}"
    accept_hostkey: true
    single_branch: true
    force: true
    depth: 1
  environment:
    GIT_TERMINAL_PROMPT: "0"
  when: learners_theme_repository is defined

- name: Replace theme colors
  become: true
  ansible.builtin.lineinfile:
    path: "{{ learners_exercise_build_path }}/themes/learners/static/css/theme-cyberrange.css"
    regexp: "(--{{ item.color }}: )(.*?);"
    line: "--{{ item.color }}: {{ item.value }};"
  loop:
    - color: primary-color
      value: "{{ learners_config_learners.theme.secondary | default('#009899') }}"
    - color: success-color
      value: "{{ learners_config_learners.theme.success | default('#6cbd8e') }}"

- name: Build static content
  become: true
  become_user: "{{ learners_user }}"
  ansible.builtin.command:
    cmd: "{{ learners_exercise_build_path }}/build.py -d {{ learners_wwwroot }} -c {{ learners_basepath }}/config.yml"
  args:
    chdir: "{{ learners_exercise_build_path }}"
    creates: "{{ learners_wwwroot }}/hugo/base"
  register: build_status
  retries: 3
  delay: 5
  until: "'goroutine' not in build_status.stdout_lines"
  notify: Restart learners
