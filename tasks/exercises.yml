---

- name: Ensure <{{ learners_exercises_packages | join(', ') }}> is installed
  ansible.builtin.package:
    name: "{{ learners_exercises_packages }}"
    state: latest
    update_cache: yes
  become: yes

- name: Cleanup base directory for reinstall
  ansible.builtin.file:
    path: "{{ learners_exercises_paths.base }}"
    state: absent
  when: learners_exercises_git.learners_exercises['always_reinstall']
  become: yes

- name: Ensure exercises paths exist
  ansible.builtin.file:
    path: "{{ item.value }}"
    owner: "{{ learners_user }}"
    group: "{{ learners_usergroup }}"
    state: directory
  loop: "{{ learners_exercises_paths | dict2items }}"
  become: yes

# - name: Clone exercises repo
#   ansible.builtin.git:
#     repo: "https://\
#       {{ item.value['token'] }}@github.com/\
#       {{ item.value['user'] }}/\
#       {{ item.value['repo'] }}.git"
#     dest: "{{ item.value['dest'] }}"
#     version: "{{ item.value['branch'] }}"
#     force: "{{ item.value['force'] }}"
#     single_branch: yes
#     recursive: no
#   loop: "{{ learners_exercises_git | dict2items }}"
#   become: yes
#   become_user: "{{ learners_user }}"


# Clone it to localhost in order to customize it and deploy it per user:
- name: Clone exercises repo to local directory
  connection : local
  ansible.builtin.git:
    repo: "https://\
      {{ item.value['token'] }}@github.com/\
      {{ item.value['user'] }}/\
      {{ item.value['repo'] }}.git"
    dest: "{{ item.value['local_dest'] }}"
    version: "{{ item.value['branch'] }}"
    force: "{{ item.value['force'] }}"
    single_branch: yes
    recursive: no
  loop: "{{ learners_exercises_git | dict2items }}"
  become: yes
  become_user: "{{ ansible_user }}"

#! Upload customized files
- debug:
    msg: "{{ break here }}"

- name: Build hugo static sites
  ansible.builtin.command:
    cmd: "hugo \
    --contentDir='{{ item.value['path'] }}' \
    --destination='{{ item.value['dest'] }}'"
  args:
    chdir: "{{ learners_exercises_paths.base }}"
    creates: "{{ learners_exercises_paths.base }}/{{ item.value['dest'] }}"
  loop: "{{ learners_exercises_statics | dict2items }}"
  become: yes
  become_user: "{{ learners_user }}"
  
- name: Add NGINX configuration file
  ansible.builtin.template:
    src: nginx_exercises.conf.j2
    dest: /etc/nginx/sites-enabled/exercises.conf
    owner: "{{ learners_user }}"
    group: "{{ learners_user }}"
    mode: 0644
  become: yes
  notify: restart nginx
  
