---

- name: Ensure <{{ learners_exercises_packages | join(', ') }}> is installed
  ansible.builtin.package:
    name: "{{ learners_exercises_packages }}"
    state: latest
    update_cache: yes
  become: yes

- name: Cleanup base directory for reinstall
  ansible.builtin.file:
    path: "{{ learners_exercises_paths.base }}"
    state: absent
  when: learners_exercises_git.learners_exercises['always_reinstall']
  become: yes

- name: Ensure exercises paths exist
  ansible.builtin.file:
    path: "{{ item.value }}"
    owner: "{{ learners_user }}"
    group: "{{ learners_usergroup }}"
    state: directory
  loop: "{{ learners_exercises_paths | dict2items }}"
  become: yes

- name: Clone exercises repo to target host
  ansible.builtin.git:
    repo: "https://\
      {{ item.value['token'] }}@github.com/\
      {{ item.value['user'] }}/\
      {{ item.value['repo'] }}.git"
    dest: "{{ item.value['dest'] }}"
    version: "{{ item.value['branch'] }}"
    force: "{{ item.value['force'] }}"
    single_branch: yes
    recursive: no
  loop: "{{ learners_exercises_git | dict2items }}"
  become: yes
  become_user: "{{ learners_user }}"


# -------------------------------------------
# *** Local Templating ***
# -------------------------------------------

- name: Cleanup local templates
  connection : local
  ansible.builtin.file:
    path: "{{ role_path }}/templates/{{ learners_exercises_git.learners_exercises['repo'] }}"
    state: absent
  when: learners_exercises_git.learners_exercises['always_reinstall']
  become: yes
  become_user: "{{ ansible_user }}"

- name: Clone exercises repo to local directory
  connection : local
  ansible.builtin.git:
    repo: "https://\
      {{ learners_exercises_git.learners_exercises['token'] }}@github.com/\
      {{ learners_exercises_git.learners_exercises['user'] }}/\
      {{ learners_exercises_git.learners_exercises['repo'] }}.git"
    dest: "{{ learners_exercises_git.learners_exercises['local_dest'] }}"
    version: "{{ learners_exercises_git.learners_exercises['branch'] }}"
    force: "{{ learners_exercises_git.learners_exercises['force'] }}"
    single_branch: yes
    recursive: no
  become: yes
  become_user: "{{ ansible_user }}"

- name: Only keep content
  connection : local
  block:
    - ansible.builtin.find:
        path: "{{ role_path }}/templates/\
          {{ learners_exercises_git.learners_exercises['repo'] }}"
        file_type: any
        hidden: yes
        excludes: "content"
      register: found_files
    - ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ found_files['files'] }}"
  become: yes
  become_user: "{{ ansible_user }}"
  no_log: True

# -------------------------------------------
# Temporarly replace custom tags to allow ansible templating 
# -------------------------------------------

- name: Replace custom start tags
  connection : local
  ansible.builtin.replace:
    path: "{{ item.src }}"
    regexp: "{{ '{{' }}%"
    replace: "{{ '{{' }} custom_start_tag {{ '}}' }}"
  with_filetree: "{{ role_path }}/templates/\
    {{ learners_exercises_git.learners_exercises['repo'] }}/"
  when: item.state == 'file'
  no_log: True

- name: Replace custom end tags
  connection : local
  ansible.builtin.replace:
    path: "{{ item.src }}"
    regexp: "%{{ '}}' }}"
    replace: "{{ '{{' }} custom_end_tag {{ '}}' }}"
  with_filetree: "{{ role_path }}/templates/\
    {{ learners_exercises_git.learners_exercises['repo'] }}/"
  when: item.state == 'file'
  no_log: True


# -------------------------------------------
# *** Deploy to target host ***
# -------------------------------------------


- name: Ensure exercises paths exist
  ansible.builtin.file:
    path: "{{learners_exercises_paths.base }}/users"
    owner: "{{ learners_user }}"
    group: "{{ learners_usergroup }}"
    state: directory
  become: yes

- name: Deploy exercises files per user
  include:  deploy_exercises_files.yml 
            username={{ user.key }} 
  loop: "{{ learners_userlist | dict2items }}"
  loop_control:
   loop_var: user

- name: Cleanup local templates
  connection : local
  ansible.builtin.file:
    path: "{{ role_path }}/templates/{{ learners_exercises_git.learners_exercises['repo'] }}"
    state: absent
  become: yes
  become_user: "{{ ansible_user }}"
  
- name: Add NGINX configuration file
  ansible.builtin.template:
    src: nginx_exercises.conf.j2
    dest: /etc/nginx/sites-enabled/exercises.conf
    owner: "{{ learners_user }}"
    group: "{{ learners_user }}"
    mode: 0644
  become: yes
  notify: restart nginx
  
