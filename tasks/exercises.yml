---
- name: Clone Exercise to {{ learners_exercise_build_path }}
  become: true
  become_user: "{{ learners_user }}"
  ansible.builtin.git:
    repo: "{{ learners_exercise_repository }}"
    dest: "{{ learners_exercise_build_path }}"
    version: "{{ learners_exercise_branch | default('master') }}"
    accept_hostkey: true
    single_branch: true
    recursive: false
    force: true
    depth: 1
  environment:
    GIT_TERMINAL_PROMPT: "0"

- name: Clone Theme
  become: true
  become_user: "{{ learners_user }}"
  ansible.builtin.git:
    repo: "{{ learners_theme_repository }}"
    dest: "{{ learners_exercise_build_path }}/themes/learners/"
    version: "{{ learners_theme_branch | default('master') }}"
    accept_hostkey: true
    single_branch: true
    force: true
    depth: 1
  environment:
    GIT_TERMINAL_PROMPT: "0"
  when: learners_theme_repository is defined

- name: Replace theme colors
  become: true
  ansible.builtin.lineinfile:
    path: "{{ learners_exercise_build_path }}/themes/learners/static/css/theme-cyberrange.css"
    regexp: "(--{{ item.color }}: )(.*?);"
    line: "--{{ item.color }}: {{ item.value }};"
  loop:
    - color: primary-color
      value: "{{ learners_config_learners.theme.secondary | default('#009899') }}"
    - color: success-color
      value: "{{ learners_config_learners.theme.success | default('#6cbd8e') }}"

- name: Ensure exercises build packages are installed
  become: true
  ansible.builtin.package:
    name: "{{ exercises_packages }}"
    state: present
    update_cache: true

- name: Ensure hugo is installed
  become: true
  ansible.builtin.apt:
    deb: "{{ hugo_install_url }}"

- name: Create {{ learners_wwwroot }}
  become: true
  ansible.builtin.file:
    path: "{{ learners_wwwroot }}"
    owner: "{{ learners_user }}"
    group: "{{ learners_user }}"
    mode: "0755"
    state: directory

- name: Remove build flag
  become: true
  ansible.builtin.file:
    path: "{{ learners_wwwroot }}/hugo/base"
    state: absent
  when: exercise_force_rebuild

- name: Build static content
  become: true
  become_user: "{{ learners_user }}"
  ansible.builtin.command:
    cmd: "{{ learners_exercise_build_path }}/build.py -d {{ learners_wwwroot }}"
  args:
    chdir: "{{ learners_exercise_build_path }}"
    creates: "{{ learners_wwwroot }}/hugo/base"
  register: build_status
  retries: 3
  delay: 5
  until: "'goroutine' not in build_status.stdout_lines"
  notify: Restart learners

- name: Check Subdirectories existence
  ansible.builtin.stat:
    path: "{{ learners_wwwroot }}/hugo/base/en/{{ item }}"
  register: dir_check
  loop: "{{ learners_default_content }}"

- name: Create tabs default object
  ansible.builtin.set_fact:
    content_present_in_repo: "{{ content_present_in_repo | default({}) | combine({item.item: item.stat.exists}) }}"
  loop: "{{ dir_check.results }}"

- name: Write config
  become: true
  ansible.builtin.template:
    owner: "{{ learners_user }}"
    group: "{{ learners_user }}"
    src: templates/config.yml.j2
    dest: "{{ learners_basepath }}/config.yml"
    mode: preserve
  notify: Restart learners
